# control-panel.yaml - ESPHome configuration for the Control Panel v1
# 
# 2023/07/24 Stephen Houser
substitutions:
  device_name: "control-panel-1"
  friendly_name: "Control Panel 1"
  friendly_short: "control_panel_1"

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}
  # includes:
  #   - control-panel/control-panel.h
  # libraries:
  #   - "FastLED"

esp32:
  board: esp32dev
  framework:
    type: arduino

logger:
  # Enable logger

wifi:
  # WiFi settings are mostly secrets
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # fast_connect helps with connection to hidden SSID
  fast_connect: true
  # force the network name to be on hidden network
  use_address: ${device-name}.playmates

  ap:
    ssid: "test"
    password: "sample12345"

ota:
  # Enable Over The Air (OTA) updates with password
  password: !secret ota_password

api:
  # Enable Encrypted Home Assistant API
  encryption:
    key: "G+UNlM3nwQwj87nA+e9PllL1n7BNlsvfkPNOTAX8yG0="

mqtt:
  # Secret MQTT server parameters
  broker: !secret mqtt_host
  username: !secret mqtt_user
  password: !secret mqtt_password

web_server:
  # Web interface enabled and has local resources (no Internet)
  local: true
  include_internal: true

switch:
  # Allow remote restart (from web interface also)
  - platform: restart
    name: "${friendly_name} Restart"

output:
  # Configure GPIO21 as an output to pull it low and enable the rotary encoder
  # Could have just wired this to ground on the PCB, but it's wired to a pin.
  - platform: gpio
    pin: GPIO22
    id: rotarty_encoder_enable

external_components:
  # use all components from a local folder
  - source:
      type: local
      path: components
    components: [ led_matrix_keyboard ]

globals:
  - id: led_bright
    type: int
    restore_value: yes
    initial_value: '50'

light:
  # The Addressable RGB lights on the control panel. All in one "strip"
  - platform: esp32_rmt_led_strip
    rgb_order: RGB
    pin: GPIO5
    id: panel_leds
    # 13 LEDs in control panel; 6 in display panel
    num_leds: 13
    rmt_channel: 0
    chipset: ws2812
    name: "Panel LEDs"

led_matrix_keyboard:
  # The matrix toggle switches on the control panel
  # name: "Keyboard"
  id: keyboard
  rows:
    - pin: GPIO12
    - pin: GPIO13
    - pin: GPIO14
  columns:
    - pin: GPIO25
    - pin: GPIO26
    - pin: GPIO27
    - pin: GPIO33
  # The PCB was laid out to make the wires go, so the rows and columns
  # are not really lined up. This mapping maps the switches to sane "keys"
  # so the switch at row0, col0 is at index 0 in this string
  key_map: "504A123B6789"
  # There are diodes for n-key rollover
  has_diodes: true
  # will toggle these LEDs     
  light_id: panel_leds
  # The addresses of the LEDs might not match keys, so this map translates
  # the 0-th entry will turn on when the key at row0,col0 is toggled
  light_map: [7, 8, 12, 0, 9, 10, 11, 0, 6, 5, 4, 3]
  # light_map: "78C09AB06543"

binary_sensor:
  - <<: !include common/status.yaml

  # The red call pushbutton
  - platform: gpio
    name: "Call Button"
    id: call_button
    pin: 
      number: GPIO18
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.addressable_set:
            id: panel_leds
            range_from: 1
            range_to: 1
            red: 50%
            green: 0%
            blue: 0%
            white: 0%
    on_release:
      then:
        - light.addressable_set:
            id: panel_leds
            range_from: 1
            range_to: 1
            blue: 0%
            red: 0%
            green: 0%
            white: 0%

  # The rotary encoder has a push button
  - platform: gpio
    name: "Rotary Encoder Button"
    id: rotary_encoder_button
    pin: 
      number: GPIO19
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      then:
        - light.addressable_set:
            id: panel_leds
            range_from: 2
            range_to: 2
            red: 50%
            green: 0%
            blue: 0%
            white: 0%
    on_release:
      then:
        - light.addressable_set:
            id: panel_leds
            range_from: 2
            range_to: 2
            blue: 0%
            red: 0%
            green: 0%
            white: 0%

  - platform: led_matrix_keyboard
    keyboard_id: keyboard
    name: "Switch 1"
    id: sw1
    key: 1

sensor:
  - <<: !include common/wifi_status.yaml

  - <<: !include common/uptime.yaml

  # The rotary encoder rotation
  - platform: rotary_encoder
    name: "Rotary Encoder"
    id: panel_encoder
    publish_initial_value: True
    pin_a: 
      number: GPIO21
      mode: INPUT_PULLUP
    pin_b: 
      number: GPIO23
      mode: INPUT_PULLUP
    on_clockwise:
      then:
        - lambda: !lambda |-
            int bright = id(led_bright) < 100 ? id(led_bright) + 1 : 100;
            id(led_bright) = bright;
            auto call = id(panel_leds);
            call.set_brightness(bright/100);
            call.perform();

    on_anticlockwise:
      then:
        - lambda: !lambda |-
            int bright = id(led_bright) > 0 ? id(led_bright) - 1 : 0;
            id(led_bright) = bright;
            auto call = id(panel_leds);
            call->set_brightness(bright/100);
            call->perform();
